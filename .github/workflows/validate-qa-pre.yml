name: Validate QA PR

on:
  pull_request:
    branches:
      - qa
    types: [opened, synchronize, reopened]

jobs:
  run_unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest databricks-connect
          
      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks
      
      - name: Run unit tests
        run: |
          pytest -xvs tests/test_create_table_job_direct.py
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_HML }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID_HML }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_TOKEN_HML }}

  validate_bundle:
    name: Validate Bundle
    runs-on: ubuntu-latest
    needs: run_unit_tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Databricks CLI
        run: |
          echo "Instalando o CLI do Databricks..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks
          
      - name: Validate bundle format
        run: |
          databricks bundle validate -t qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_HML }}
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID_HML }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_TOKEN_HML }} 
