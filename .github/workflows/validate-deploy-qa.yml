name: Validate QA PR

on:
  pull_request:
    branches:
      - qa
    types: [opened, synchronize, reopened]

jobs:
  code_quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          
      - name: Run Flake8
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --ignore=F821 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=100 --ignore=F821 --statistics

  validate_bundle:
    name: Validate Bundle
    runs-on: ubuntu-latest
    needs: code_quality
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Databricks CLI
        run: |
          echo "Instalando o CLI do Databricks..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks
          
      - name: Validate bundle format
        run: |
          databricks bundle validate -t qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_HML }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_HML }}          
   
  deploy_to_qa:
    name: Deploy to QA
    runs-on: ubuntu-latest
    needs: validate_bundle
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Databricks CLI
        run: |
          echo "Instalando o CLI do Databricks..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks

      - name: Deploy bundle to qa
        run: |
          databricks bundle deploy -t qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_HML }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_HML }}          

  run_job_qa:
    name: Run Job in QA
    runs-on: ubuntu-latest
    needs: deploy_to_qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Databricks CLI
        run: |
          echo "Instalando o CLI do Databricks..."
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks

      - name: Run job in QA
        run: |
          databricks bundle run lab_cicd_criar_tabela_funcionario -t qa
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_HML }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_HML }}

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: run_job_qa
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest databricks-connect PyYAML
          
      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          which databricks
      
      - name: Run unit tests
        run: |
          pytest -v -p no:warnings
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST_HML }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_HML }}       
